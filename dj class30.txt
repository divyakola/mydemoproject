ex:
---
create django project with normal form?

step1:
-----
create a django project

	django-admin startproject proj26

step2:
----
goto project location and to create an application in our project 

	cd proj26

	python manage.py startapp app26

step3:
----
to install our application in the settings.py file of the project.

	settings.py
	----------
INSTALLED_APPS = [
    
    'app26'
]

step4:
-----
to create templates and to set the path for our templates in the settings.py file of the project.

	settings.py
	----------
TEMPLATES = [
    {
      
        'DIRS': [BASE_DIR/'templates'],       
    },
]

step5:
----
to create a forms in the forms.py file of the application

	forms.py
	--------
from django import forms

class student(forms.Form):
    sid=forms.IntegerField(label="enter student id:",
                    help_text="student minimu 3-digits")
    sname=forms.CharField(label="enter student name:",
                          max_length=20)
    sadd=forms.CharField(label="enter student address")
    
step6:
-----
to create a views in the views.py file of the application

	views.py
	--------
from django.shortcuts import render
from .forms import student
from django.http import HttpResponse
# Create your views here.
def std_info(request):
    std_obj=student()
    return render(request,'input.html',{'std':std_obj})
def result(request):
    return HttpResponse("Inserted successfully")
    
	scenario-1	--> input.html
	----------	    ----------
<!DOCTYPE html>
<html>
<head>
</head>
<body bgcolor="powderblue">
<form action="insert">
 {{ std }}
<input type="submit" value="add">
</form>
</body>
</html>    

	scenario-2	--> input.html
	----------	    ----------
<!DOCTYPE html>
<html>
<head>
</head>
<body bgcolor="powderblue">
<form action="insert">
 {{ std.as_p }}
<input type="submit" value="add">
</form>
</body>
</html>

	scenario-3	--> input.html
	----------	    ----------
<!DOCTYPE html>
<html>
<head>
</head>
<body bgcolor="powderblue">
<form action="insert">
<table>
 {{ std.as_table }}
</table>
<input type="submit" value="add">
</form>
</body>
</html>

	scenario-4	--> input.html
	----------	    ----------
<!DOCTYPE html>
<html>
<head>
</head>
<body bgcolor="powderblue">
<form action="insert">

 {{ std.as_ul }}

<input type="submit" value="add">
</form>
</body>
</html>

	scenario-5	--> input.html
	----------	    ----------

<!DOCTYPE html>
<html>
<head>
</head>
<body bgcolor="powderblue">
<form action="insert">
<ul type="circle">
 {{ std.as_ul }}
</ul>
<input type="submit" value="add">
</form>
</body>
</html>

step7:
-----
to configure the url patterns for our views in the urls.py file of the project.

	urls.py
	-------
from django.contrib import admin
from django.urls import path
from app26 import views
from django.conf.urls import url

urlpatterns = [
    path('admin/', admin.site.urls),
    path('in/',views.std_info),
    url('insert',views.result)
]

step8:
-----
to apply the migrations

	python manage.py migrate

step9:
-----
to start the server

	python manage.py runserver

step10:
------
to send the request to the server

	http://127.0.0.1:8000/in

structure:
---------
	proj26
	   |--->app26
	   |      |--->forms.py
	   |      |--->views.py
	   |--->proj26
	   |      |--->settings.py
	   |      |--->urls.py
	   |--->templates
	   |      |--->input.html
	   |--->manage.py

Model Forms:
------------
	any form is connected to model,that forms are called ModelForms.

	if we want to create modelforms in that case our class is extending by ModelForm class of forms module.

	syntax
	------
	from django import forms
	
	class classname(forms.ModelForm):
		class Meta:
		      model="modelname"
		      fields=['field_1','field_2',....]
                            (or)
		      fields='__all__'
