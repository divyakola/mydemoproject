working with static files?
--------------------------
	static files means css,javascript and images.

	we can working with static files,to configure the some settings in settings.py file of the project.

	settings.py
	-----------
after static url

STATICFILES_DIRS=[
	BASE_DIR/'static',
    ]

how to loading the static files into templates?
----------------------------------------------
	we can load the css files into templates,by using following syntax,

	{% load static %}

<link rel="stylesheet" href="{% static 'cssfilename.css' %}">


	we can load the javascript files into templates,by using following syntax,

	{% load static %}

<script type="text/javascript" src="{% static 'javscriptfilename.js' %}>
</script>

	we can load the images into templates,by using following syntax,

	{% load static %}
<img src="{% static 'imagefilenamewithextension' %} />

ex:
---
create a django project with static files?

step1:
------
to create a django project

	django-admin startproject proj30

step2:
----
goto project location and to create an application in the project location.

	cd proj30

	python manage.py startapp

step3:
----
to install our application in the settings.py file of the project.

	settings.py
	-----------
INSTALLED_APPS = [
    
    'app30'
]

step4:
------
to configure the database settings in the settings.py file of the project.

	settings.py
	-----------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

step5:
-----
to define models in the models.py file of the application

	models.py
	--------
from django.db import models

# Create your models here.
class customer(models.Model):
    cid=models.IntegerField(primary_key=True)
    cname=models.CharField(max_length=20)
    cadd=models.CharField(max_length=30)

step6:
-----
to check the errors in our model

	python manage.py check

step7:
-----
to create a modesl(to generate sql queries for our models)

	python manage.py makemigrations

step8:
----
to create a tables(to execute sql queries)

	python manage.py migrate

step9:
-----
to create a modelform for our models in the forms.py file of the application.

	forms.py
	-------
from django import forms
from .models import customer
class customer_form(forms.ModelForm):
    class Meta:
        model=customer
        fields="__all__"
        
step10:
-----
to create templates and to set the path for our templates in the settings.py file of the project.

	settings.py
	-----------
TEMPLATES = [
    {
        
        'DIRS': [BASE_DIR/'templates'],
        
    },
]

step11:
-----
to create static files and to set the path for static files in the settings.py file of project.

	settings.py
	----------
STATIC_URL = '/static/'

STATICFILES_DIRS=[
    BASE_DIR/'static',
    ]

step12:
-------
to create views in the views.py file of the application

	views.py
	-------
from django.shortcuts import render
from .forms import customer_form
from django.http import HttpResponse
from .models import customer
# Create your views here.
def cinput(request):
    c_f=customer_form()
    return render(request,'input.html',{'cust':c_f})
def cinsert(request):
    c_f=customer_form(request.POST)
    if c_f.is_valid():
        c_f.save()
        return HttpResponse("Inserted successfully")
def cdisplay(request):
    data=customer.objects.all()
    return render(request,'output.html',{'records':data})
    
	input.html
	----------
<!DOCTYPE html>
{% load static %}
<html>
<head>
<link rel="stylesheet" href="{% static 'css/sample.css' %}">
<script type="text/javascript" src="{% static 'js/welcome.js' %}">
</script>
</head>
<body>
<form action="insert" method="post">
{% csrf_token %}
{{ cust.as_p }}
<input type="submit" value="add">
</form>
<img src="{% static 'images/guido.jpg' %}">
</body>
</html>

	output.html
	-----------
<!DOCTYPE html>
{% load static %}
<html>
<head>
<link rel="stylesheet" href="{% static 'css/base.css' %}">
</head>
<body>
<table>
<tr><th>Cid</th>
    <th>Cname</th>
    <th>Cadd</th>
</tr>
{% for rec in records %}
<tr><td>{{rec.cid}}</td>
    <td>{{rec.cname}}</td>
    <td>{{rec.cadd}}</td>
</tr>
{% endfor %}
</table>
</body>
</html>

	sample.css
	---------
body{
  background-color:powderblue;
   }

img{
   padding:200px;

  }

	base.css
	-------
body{
   background-color:orange;
  }

table{
   border:5px solid;
   }

	welcome.js
	----------
alert("click me");
  

step13:
-----
to configure the url patterns for our views in the urls.py file of the project.

	urls.py
	--------
from django.contrib import admin
from django.urls import path
from app30 import views
from django.conf.urls import url

urlpatterns = [
    path('admin/', admin.site.urls),
    path('in/',views.cinput),
    url('insert',views.cinsert),
    path('res/',views.cdisplay)
]

step14:
-----
to start the server

	python manage.py runserver

step15:
-----
to send the request to the server

	http://127.0.0.1:8000/in
	http://127.0.0.1:8000/res

structure:
---------
	proj30
	   |--->app30
	   |      |--->models.py
	   |      |--->forms.py
	   |      |--->views.py
	   |      |--->admin.py
	   |--->proj30
	   |      |--->settings.py
	   |      |--->urls.py
	   |--->templates
	   |      |--->input.html
	   |      |--->output.html
	   |--->static
	   |      |--->css
    	   |      |     |--->sample.css
           |      |     |--->base.css
           |      |--->js
           |      |     |--->welcome.js
           |      |--->images
           |      |     |--->guido.jpg
           |--->manage.py


	admin.py
	--------
from django.contrib import admin
from .models import customer
# Register your models here.
class customerAdmin(admin.ModelAdmin):
    list_display=['cid','cname','cadd']
    search_fields=['cname','cadd']
admin.site.register(customer,customerAdmin)



